// Operators
// Арифметические + - * /
// Сравнения === !== <= >=
// Логические ! (не) && (и) || (или)
// Присваивание =
// Текстовые typeof instanceof new delete
// ---------------------------------------
// Унарные операторы:
// а++ (увеличивает значение на 1) 
// +а (конвертирует напр. строку в число)
// delete obj.a
// typeof a
// new Object()
// ---------------------------------------
// Бинарные операторы:
// а = 5
// a + b
// a += 4
// a === b
// a && b
// ---------------------------------------
// Инфиксная запись (оператор стоит между операндами):
// а = true
// a + b
// a += b 
// etc.
// ---------------------------------------
// Префиксаня запись (оператор стоит перед операндом):
// ++а
// delete obj.a
// ---------------------------------------
// Постфиксная запись (оператор идёт за операндом):
// а++
// myFunction()
// ---------------------------------------
// Приоритетность операторов: все как и в математике.
// ---------------------------------------
// Логические:
// ! возвращает значение типа boolean
// && || возвращают значение одного из операндов
// ---------------------------------------
// Ложные значение - это значения, которые при приведение к
// логическому типу, дают false
// false, '', 0, undefined, null
// console.log(Boolean(0))
// ---------------------------------------
// Оператор ! (возвращает true, если значение оператора false)
// !10, !0, !'abc', !''
// ---------------------------------------
// Оператор !! (возвращает true, если значение оператора true)
// !! - отицание отрицания
// ---------------------------------------
// Оператор &&:
// expression1 && expression 2
// Если выражение №1 ложно, то выражение №2 игнорируется и
// результатом этого выражания будет результат выражения №1
// 
// Если выражение №1 истинно, то оцениваем выражение №2. Если
// оно ложно, то возвращаем результат выражения №2, так же как
// и в случае, если второе выражение истинное
// ---------------------------------------
// Оператор ||:
// expression1 && expression 2
// Если выражение №1 истинно, то выражение №2 игнорируется
// и результатом этого выражения будет результат выражения №1
// 
// Если выражение №1 ложно, а выражение №2 истинно, то 
// возвращаем результат выражения №2
// 
// Если оба выражения ложные, то возвращается результат №2

// 4:23:45